{"version":3,"sources":["reducer.js","actions.js","context.js","SearchForm.js","Stories.js","Buttons.js","App.js","index.js"],"names":["reducer","state","action","type","isLoading","hits","payload","nbPages","query","searchTerm","id","remainingHits","filter","story","objectID","direction","newPage","page","Error","initialState","AppContext","React","createContext","AppProvider","children","useReducer","dispatch","fetchStories","url","a","fetch","response","json","data","console","log","useEffect","Provider","value","removeStory","handleSearch","handlePage","useGlobalContext","useContext","SearchForm","useState","setQuery","inputRef","useRef","current","focus","className","onSubmit","e","preventDefault","ref","onChange","target","Stories","map","title","num_comments","points","author","key","href","rel","onClick","Buttons","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05481f1f.chunk.js","sourcesContent":["import {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_PAGE,\n  HANDLE_SEARCH,\n} from './actions'\n\nconst reducer = (state, action) => {\n\n  switch(action.type){\n\n    case SET_LOADING:\n      return {...state, isLoading: true}\n\n    case SET_STORIES:\n      return{\n        ...state,\n        isLoading: false,\n        hits: action.payload.hits,\n        nbPages: action.payload.nbPages\n      }\n\n    case HANDLE_SEARCH:\n      const query = action.payload\n      return {...state, searchTerm: query}\n\n    case REMOVE_STORY:\n      const id = action.payload\n      const remainingHits = state.hits.filter(story => story.objectID !== id)\n      return {...state, hits:remainingHits};\n\n    case HANDLE_PAGE:\n      const direction = action.payload;\n\n        let newPage = state.page;\n        if (direction === \"next\"){\n          newPage + 1 < state.nbPages ? newPage += 1 : newPage = 0\n        } else if (direction === \"prev\"){\n          newPage - 1 < 0 ? newPage = state.nbPages - 1 : newPage -= 1;\n        }\n\n      return {...state, page:newPage}\n\n    default:\n      throw new Error(`no matching \"${action.type}\" action type`)\n  }\n\n}\nexport default reducer\n","export const SET_LOADING = 'SET_LOADING'\nexport const SET_STORIES = 'SET_STORIES'\nexport const REMOVE_STORY = 'REMOVE_STORY'\nexport const HANDLE_PAGE = 'HANDLE_PAGE'\nexport const HANDLE_SEARCH = 'HANDLE_SEARCH'\n","import React, { useContext, useEffect, useReducer } from 'react'\n\nimport {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_PAGE,\n  HANDLE_SEARCH,\n} from './actions'\nimport reducer from './reducer'\n\nconst API_ENDPOINT = 'https://hn.algolia.com/api/v1/search?'\n\nconst initialState = {\n  isLoading: true,\n  searchTerm: \"react\",\n  hits: [],\n  page: 0,\n  nbPages: 0,\n}\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const fetchStories = async(url)=> {\n    dispatch({type: SET_LOADING})\n    try{\n      const response = await fetch (url)\n      const data = await response.json()\n      const {hits, nbPages} = data\n      dispatch({type: SET_STORIES, payload:{hits: hits, nbPages: nbPages}})\n    } catch (error){\n      console.log(error)\n    }\n  }\n\n  const removeStory = (id) => {\n    dispatch({type: REMOVE_STORY, payload: id })\n  }\n\n  const handleSearch = (query) => {\n    dispatch({ type: HANDLE_SEARCH, payload:query })\n  }\n\n  const handlePage = (direction=\"next\") => {\n    dispatch({ type: HANDLE_PAGE, payload:direction })\n  }\n\n  useEffect(() => {\n    fetchStories(`${API_ENDPOINT}query=${state.searchTerm}&page=${state.page}`)\n  }, [state.searchTerm, state.page])\n\n  return <AppContext.Provider value={{...state, removeStory, handleSearch, handlePage}}>{children}</AppContext.Provider>\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useGlobalContext } from './context'\n\nconst SearchForm = () => {\n  const { handleSearch } = useGlobalContext();\n  const [query, setQuery] = useState(\"\")\n  const inputRef = useRef(null);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    handleSearch(query);\n    setQuery(\"\")\n  }\n\n  useEffect(() => {\n    inputRef.current.focus()\n  },[])\n\n  return (\n    <form className=\"search-form\" onSubmit={onSubmit}>\n      <h2>Hacker News Search</h2>\n      <p>Type and hit Enter for Results</p>\n      <input ref={inputRef} type=\"text\" value={query} className=\"form-input\" onChange={(e) => setQuery(e.target.value)}/>\n    </form>\n  )\n}\n\nexport default SearchForm\n","import React from 'react'\n\nimport { useGlobalContext } from './context'\n\nconst Stories = () => {\n  const { isLoading, hits, removeStory, searchTerm } = useGlobalContext();\n  if (isLoading){\n    return <div className=\"loading\"></div>\n  } \n  return (\n    <section className=\"stories\">\n      <h3>Results for {searchTerm}</h3>\n      {hits.map(story => {\n        const {objectID, title, num_comments, url, points, author} = story\n       return ( <article className=\"story\" key={objectID}>\n          <h4 className=\"title\">{title}</h4>\n          <p className=\"info\">\n            {points} points by <span>{author} | </span>{num_comments}{' '} comments\n          </p>\n          <div>\n            <a href={url} className=\"read-link\" target='\n            _blank' rel=\"noopener noferrer\">Read more</a>\n            <button className=\"remove-btn\" onClick={() => removeStory(objectID)}>Remove</button>\n          </div>\n        </article>)\n      })}\n    </section>\n  )\n}\n\nexport default Stories\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst Buttons = () => {\n  const {handlePage, isLoading, nbPages, page} = useGlobalContext();\n\n  return (\n    <div className=\"btn-container\">\n      <button disabled={isLoading} onClick={() => handlePage(\"prev\")}>Prev Page</button>\n      <p>{page + 1} of {nbPages} </p>\n      <button disabled={isLoading} onClick={() => handlePage(\"next\")}>Next Page</button>\n    </div>\n  )\n}\n\nexport default Buttons\n\n\n","import React from 'react'\nimport SearchForm from './SearchForm'\nimport Stories from './Stories'\nimport Buttons from './Buttons'\n\n\nfunction App() {\n  return (\n    <>\n      <SearchForm />\n      <Buttons />\n      <Stories />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}